2011-08-11  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/LaunchConfigurationConstants.java:
		Modify verbosity.

2010-06-02  Roland Grunberg  <rgrunber@redhat.com>

	* plugin.properties: Externalize some strings in the Manifest.
	* build.properties: See above
	* META-INF/MANIFEST.MF: See above
	* plugin.xml: See above

2010-06-01  Roland Grunberg  <rgrunber@redhat.com>

	* errors.prop: Modify error message for uprobes to list both
	/usr/share/ and /usr/local/share in the make step for standard
	SystemTap installs, and local installations.

2010-04-13  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextParser.java:
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java:
		Clean up code. 

2010-04-08  Roland Grunberg  <rgrunber@redhat.com>

	* META-INF/MANIFEST.MF: Add required import packages.
	* src/org/eclipse/linuxtools/callgraph/core/FileFinderOpener.java
		(findAndOpen): Simplify logic by using functions in profiling
		framework o.e.l.profiling to link to source code.

2010-03-22  Roland Grunberg  <rgrunber@redhat.com>

	* META-INF/MANIFEST.MF: Add o.e.l.profiling.ui to imported packages.
	* src/org/eclipse/linuxtools/callgraph/core/FileFinderOpener.java:
		Clean up code by using openEditorAndSelect which is now in profiling framework.
	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Remove these strings.

2010-02-26  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java:
		Clean up code and add getter for internal data field.

2010-02-23  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Add a Thread.sleep() to stop abusing CPU cycles so much
	Get rid of extraneous parsing job as a further optimization

2010-02-12  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Create default implementations of getParser and setParser using a private SystemTapParser variable.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextView.java: Get rid of getParser and setParser functions.

2010-02-11  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextParser.java: Properly grab new lines in text parser.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Call makeView earlier so SystemTapTextView will stop breaking.

2010-02-02  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapCommandGenerator.java: Fix binary argument handling.

2010-02-01  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Remove unused externalized string.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Remove Callgraph Version string.

2010-01-28  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: Clean up unnecessary code.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextView.java: Same as above.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Same as above.

2010-01-26  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Fix settings for nonrealtimeparsing.

2010-01-22  Roland Grunberg  <rgrunber@redhat.com>

	* errors.prop: Add case for when uprobes.ko built for a previous kernel, and must be updated.
	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Remove Error Log externalized strings.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java:
		(writeToLog): Output logged errors using the Eclipse Error Log.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextView.java:
		(createPartControl): remove the Error Log from being displayed. 
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Remove the Error Log window.

2009-12-22  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: Remove extraneous logic
	* errors.prop: Re-add uprobes error after slight modification to popup error

2009-12-21  Charley Wang  <chwang@redhat.com>

	* errors.prop: Get rid of error for uprobes -- the stap output is pretty descriptive. The popup box is just annoying.

2009-12-17  rgrunber  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Fix certain externalized strings.
	* src/org/eclipse/linuxtools/callgraph/core/Helper.java: 
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: 
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: 
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java 
		(finishHandling): Change method to void.

2009-12-16  rgrunber  <rgrunber@redhat.com>

	* errors.prop: Update / Clean up error file.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java:
		Remove function extracting logic. It was used to determine which probe points did not match.
		Stap now silently fails on a probe point that fails to match.
		Add some methods to assist in testing.

2009-12-15  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/FileFinderOpener.java: Make findAndOpen safety-valve return null if project is null.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Set monitor
	* parse_function_partial.stp: Remove semicolon from partial script

2009-12-14  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/Helper.java:
		BufferedWriter helper methods can be static if we simply pass in the BufferedWriter to be acted upon.

2009-12-10  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/FileFinderOpener.java: Properly quit if findAndOpen encounters a user-sent 'Cancel'

2009-12-10  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/CallgraphCorePlugin.java: Add NON-NLS as needed
	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Add Callgraph version
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Let Help->Version refer to systemtap, and callgraph versions

2009-12-09  Charley Wang  <chwang@redhat.com>

	* parse_function_partial.stp: Add threading capability

2009-12-08  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Clean up unused externalized strings
	* parse_function_partial.stp: Replace syscall.exit with process(@1).end to eliminate use of debug-info
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: Remove obsolete code

2009-11-30  Charley Wang  <chwang@redhat.com>

	* plugin.xml: Add icon to SystemTapTextView (Icon 12446.monitorOn.gif is from 3.4 Ganymede, source: http://xantorohara.110mb.com/core-icons/Eclipse.html)

2009-11-28  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/ViewFactory.java:Add createView function that uses secondaryID. 
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Add secondaryID
	* src/org/eclipse/linuxtools/callgraph/core/StapUIJob.java: Add toggle for creating views with and without multiples
	* src/org/eclipse/linuxtools/callgraph/core/LaunchConfigurationConstants.java: Add SECONDARY_VIEW_ID and DEFAULT_SECONDARY_VIEW_ID

2009-11-27  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapCommandGenerator.java: Add capacity to change the command used. The command attribute should be derived from Config.getLaunchAttribute(LaunchConfigurationConstants.COMMAND)
	* src/org/eclipse/linuxtools/callgraph/core/LaunchConfigurationConstants.java: Adding Command to LaunchConfigurationConstants. The default value is PluginConstants.STAP_PATH.

2009-11-26  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/PluginConstants.java: Rearrange constants. Add DEFAULT_PARSER_ID. Remove final modifier on STAP_PATH, so it can be changed to accommodate other commands, if need be.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextParser.java: Get rid of println statement

2009-11-23  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Use deleteLog function
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: Add deleteLog function

2009-11-18  Roland Grunberg  <rgrunber@redhat.com>

	* build.properties: Add errors.prop to build.

2009-11-18  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/PluginConstants.java: Correct default viewID.

2009-11-16  Roland Grunberg  <rgrunber@redhat.com>

	* META-INF/MANIFEST.MF: Add Eclipse to Provider field.

2009-11-16  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapCommandGenerator.java: Remove unused functions, variables. Make commandGenerator methods static.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: (testRun): Change testRun so it will actually work and actually mimicks the properties of run. 

2009-11-12  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Remove unused functions. Add docs to setDone. 

2009-11-12  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: (appendToLog):
		Method writes directly to the log without requires String argument to go through lengthy validation.
		General cleanup of SystemTapErrorhandler

2009-11-12  Charley Wang  <chwang@redhat.com>

	* ChangeLog: Remove the ShellOpener class.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapCommandGenerator.java (buildScript): CommandGenerator no longer extends action or IWindow...Delegate. None of those functions were being used.
	* src/org/eclipse/linuxtools/callgraph/core/CallgraphCorePlugin.java (getPluginLocation): Add javadoc. Remove commented functions at the bottom.

2009-11-11  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: Create cleanScript(): function as a possible first step to abstraction of Error Handling

2009-11-10  Charley Wang  <chwang@redhat.com>

	* plugin.xml: Add icons to build.properties
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Change reference to kill button to use imageDescriptor function in AbstractUIPlugin
	* src/org/eclipse/linuxtools/callgraph/core/CallgraphCorePlugin.java: Add PLUGIN_ID string 


2009-11-09  Roland Grunberg  <rgrunber@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/messages.properties: Externalize/Fix Strings
	* src/org/eclipse/linuxtools/callgraph/core/PluginConstants.java: Externalize/Fix Strings
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapErrorHandler.java: Give some variables more meaningful names.
	
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapCommandGenerator.java: Remove commented out unused code.
	* src/org/eclipse/linuxtools/callgraph/core/DocWriter.java: Add necessary headers to all files listed below.
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextParser.java: 
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextView.java: 
	* src/org/eclipse/linuxtools/callgraph/core/XMLParser.java: 

2009-11-06  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/CallgraphCorePlugin.java: Rename Activator --> CallgraphCorePlugin. 
	(start): Clean out the start method to contain only the bare essentials instead of always finding the location, etc. on startup.  
	* src/org/eclipse/linuxtools/callgraph/core/ViewFactory.java: Change the way viewFactory creates views. Have ViewFactory set the view id.
	* src/org/eclipse/linuxtools/callgraph/core/StapUIJob.java: Simplify StapUIJob by using ViewFactory to instantiate views.
	* src/org/eclipse/linuxtools/callgraph/core/DocWriter.java: Update DocWriter's methods.
	* src/org/eclipse/linuxtools/callgraph/core/XMLParser.java: Add javadocs, modify functions for ease of use.

2009-11-05  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapView.java: Rename loadView --> initializeView
	* src/org/eclipse/linuxtools/callgraph/core/SystemTapTextView.java: Rename loadView --> initializeView 
	* src/org/eclipse/linuxtools/callgraph/core/StapUIJob.java: Rename loadView --> initializeView

2009-11-04  Charley Wang  <chwang@redhat.com>

	* src/org/eclipse/linuxtools/callgraph/core/SystemTapParser.java: Fix nonRealTimeParsing.